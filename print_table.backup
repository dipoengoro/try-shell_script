
# Function to print a table
print_table() {
    local -a headers=("${!1}") # Get the headers from the array passed as the first argument
    shift                      # Remove the first argument (headers)
    local -a data=("$@")       # Get the data rows as arguments

    # Calculate the maximum width for each column
    local max_width=()
    for ((i = 0; i < ${#headers[@]}; i += 1)); do
        max_width["$i"]=${#headers[$i]}
    done

    for row in "${data[@]}"; do
        local columns=($row)
        for ((i = 0; i < ${#columns[@]}; i++)); do
            if ((${#columns[$i]} > ${max_width[$i]})); then
                max_width["$i"]=${#columns[$i]}
            fi
        done
    done

    # Print the table headers
    printf "|"
    for ((i = 0; i < ${#headers[@]}; i++)); do
        printf " %-*s |" "${max_width[$i]}" "${headers[$i]}"
    done
    printf "\n"

    # Print the table separator
    printf "|"
    for ((i = 0; i < ${#headers[@]}; i++)); do
        if [ $i -eq $((${#headers[@]} - 1)) ]; then
            printf "%-*s|" $((max_width["$i"] + 2)) ""
        else 
            printf "%-*s+" $((max_width["$i"] + 2)) ""
        fi
    done
    printf "\n"

    # Print the table data
    for row in "${data[@]}"; do
        local columns=($row)
        printf "|"
        for ((i = 0; i < ${#columns[@]}; i++)); do
            printf " %-*s |" "${max_width[$i]}" "${columns[$i]}"
        done
        printf "\n"
    done
}

# Define headers and data for the table
headers=("NO." "TIER" "TOTAL POIN" "TOTAL TRANSAKSI")
data=("1 DIAMOND 253460 482" "2 GOLD 1518774 46994" "3 SILVER 188808 20968" "4 PLATINUM 1176453 8899")

# Call the print_table function
# print_table headers[@] "${data[@]}"